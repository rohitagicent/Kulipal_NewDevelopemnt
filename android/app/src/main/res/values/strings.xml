<resources>
    <string name="app_name">kulipal</string>
</resources>

<!-- 
import React from 'react';
import { 
  View, 
  Text, 
  StyleSheet, 
  TouchableOpacity, 
  Image, 
  SafeAreaView 
} from 'react-native';
import { useDispatch } from 'react-redux';
import AsyncStorage from '@react-native-async-storage/async-storage';
// import { setUserType } from '../../store/actions/authActions';
import { setUserType } from '../../store/authActions';

const UserTypeSelectionScreen = () => {
  const dispatch = useDispatch();

  const handleUserTypeSelection = async (type) => {
    try {
      // Save user type to AsyncStorage
      await AsyncStorage.setItem('userType', type);
      
      // Update Redux state
      dispatch(setUserType(type));
    } catch (error) {
      console.log('Error saving user type', error);
    }
  };

  return (
    <SafeAreaView style={styles.container}>
      <View style={styles.content}>
       
        <Text style={styles.subtitle}>Select your account type</Text>

        <View style={styles.optionsContainer}>
          <TouchableOpacity 
            style={styles.option}
            onPress={() => handleUserTypeSelection('customer')}
          >
            <View style={styles.iconContainer}>
              <Image 
                source={require('../../assests/mo.png')}
                style={styles.icon}
                resizeMode="contain"
              />
            </View>
            <Text style={styles.optionTitle}>Customer</Text>
            <Text style={styles.optionDescription}>
              Browse products and make purchases
            </Text>
          </TouchableOpacity>

          <TouchableOpacity 
            style={styles.option}
            onPress={() => handleUserTypeSelection('vendor')}
          >
            <View style={styles.iconContainer}>
              <Image 
                source={require('../../assests/mo.png')}
                style={styles.icon}
                resizeMode="contain"
              />
            </View>
            <Text style={styles.optionTitle}>Vendor</Text>
            <Text style={styles.optionDescription}>
              Sell products and manage your store
            </Text>
          </TouchableOpacity>
        </View>
      </View>
    </SafeAreaView>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#FFFFFF',
  },
  content: {
    flex: 1,
    padding: 20,
    justifyContent: 'center',
  },
  logoContainer: {
    alignItems: 'center',
    marginBottom: 40,
  },
  logo: {
    width: 100,
    height: 100,
    marginBottom: 10,
  },
  title: {
    fontSize: 24,
    fontWeight: 'bold',
    color: '#333',
  },
  subtitle: {
    fontSize: 18,
    fontWeight: '500',
    textAlign: 'center',
    marginBottom: 30,
    color: '#555',
  },
  optionsContainer: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    paddingHorizontal: 10,
  },
  option: {
    width: '48%',
    backgroundColor: '#F5F5F5',
    borderRadius: 10,
    padding: 20,
    alignItems: 'center',
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 3,
  },
  iconContainer: {
    width: 70,
    height: 70,
    borderRadius: 35,
    backgroundColor: '#FFF',
    justifyContent: 'center',
    alignItems: 'center',
    marginBottom: 15,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 1 },
    shadowOpacity: 0.1,
    shadowRadius: 2,
    elevation: 2,
  },
  icon: {
    width: 40,
    height: 40,
  },
  optionTitle: {
    fontSize: 16,
    fontWeight: 'bold',
    marginBottom: 8,
    color: '#333',
  },
  optionDescription: {
    fontSize: 12,
    textAlign: 'center',
    color: '#777',
  },
});

export default UserTypeSelectionScreen; -->